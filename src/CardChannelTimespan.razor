@using Sufficit.Telephony.EventsPanel
@using System.Threading
<MudText Typo="Typo.caption" Class="channel-TimeSpan">@GetTimeSpan()</MudText>
@code{
    [Parameter]
    public ChannelInfo? Channel { get; set; }

    public string GetTimeSpan()
    {
        if (Channel != null)
        {
            TimeSpan span = DateTime.UtcNow - Channel.Start;
            if (Channel.Hangup != null)
                span = Channel.Hangup.Timestamp - Channel.Start;

            return span.ToString(@"mm\:ss");
        }
        return string.Empty;
    }

    // protected string GetTimespanClass()
    // {
    //     var classes = new List<string> { "channel-timespan" };

    //     if (Channel?.Hangup != null)
    //     {
    //         classes.Add("channel-timespan--ended");
    //     }
    //     else
    //     {
    //         classes.Add("channel-timespan--active");
    //     }

    //     return string.Join(" ", classes);
    // }

    protected Timer? aTimer;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (aTimer == null)
            aTimer = new Timer(CountDownTimer, null, 1000, 1000);
    }

    public async void CountDownTimer(object? state)
    {
        if (Channel?.Hangup != null)
            aTimer?.Dispose();

        await InvokeAsync(StateHasChanged);
    }
}