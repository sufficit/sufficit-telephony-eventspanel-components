@inherits EventsPanelView
@using Sufficit.Telephony.EventsPanel
<CascadingValue Value="Cards">
    @if (Pagging.PageTotalItems > Pagging.PageSize)
    {
        <PaggingContext Monitor="@Pagging">
            <EventsPanelCardsOptions Pagging="@Pagging" Total="Pagging.PageTotalItems"></EventsPanelCardsOptions>
        </PaggingContext>
    }
    <MudGrid> 
        <MudItem xs="12">
                <MudStack Row Class="flex-wrap" Spacing="2" AlignItems="AlignItems.Start">
                    @foreach (var Item in GetPeers())
                    {
                        <PeerCard Card=@Item HandleAvatar="@GetAvatar(Item)"></PeerCard>
                    }
                </MudStack>         
        </MudItem>


    @*     @if (!OnlyPeers)
        {
            <MudItem xs="12" sm="12" md="4" lg="3">
                @if (TrunksTotal > 0)
                {
                    <MudGrid Spacing="1" Class="card-grid-trunks">
                        @foreach (var Item in GetTrunks())
                        {
                            <MudItem xs="12" sm="6" md="12" Class="d-flex justify-center">
                                <TrunkCard Card=@Item HandleAvatar="@GetAvatar(Item)"></TrunkCard>
                            </MudItem>
                        }
                    </MudGrid>
                    <MudDivider Class="my-4" />
                }
                @if (QueuesTotal > 0)
                {
                    <MudGrid Spacing="1" Class="card-grid-queues">
                        @foreach (var Item in GetQueues())
                        {
                            <MudItem xs="12" sm="6" md="12" Class="d-flex justify-center">
                                <QueueCard CanToggle="@(QueuesTotal > 3)" Card=@Item HandleAvatar="@GetAvatar(Item)"></QueueCard>
                            </MudItem>
                        }
                    </MudGrid>
                }
            </MudItem>
        } *@


    </MudGrid>
</CascadingValue>
